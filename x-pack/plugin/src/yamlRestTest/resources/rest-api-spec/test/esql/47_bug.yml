setup:
  - do:
      indices.create:
        index: test
        body:
          settings:
            number_of_shards: 1
            index:
              mode: time_series
              routing_path: [ metricset, k8s.pod.uid ]
              time_series:
                start_time: 2021-04-28T00:00:00Z
                end_time: 2021-04-29T00:00:00Z
          mappings:
            properties:
              "@timestamp":
                type: date
              metricset:
                type: keyword
                time_series_dimension: true
              k8s:
                properties:
                  pod:
                    properties:
                      uid:
                        type: keyword
                        time_series_dimension: true
                      name:
                        type: keyword
                      created_at:
                        type: date_nanos
                      running:
                        type: boolean
                      number_of_containers:
                        type: integer
                      ip:
                        type: ip
                      tags:
                        type: keyword
                      values:
                        type: integer
                      network:
                        properties:
                          tx:
                            type: long
                            time_series_metric: gauge
                          rx:
                            type: long
                            time_series_metric: gauge
  - do:
      bulk:
        refresh: true
        index: test
        body:
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:04.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.1", "network": {"tx": 2001810, "rx": 802133}, "created_at": "2021-04-28T19:34:00.000Z", "running": false, "number_of_containers": 2, "tags": ["backend", "prod"], "values": [2, 3, 6]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:24.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.26", "network": {"tx": 2005177, "rx": 801479}, "created_at": "2021-04-28T19:35:00.000Z", "running": true, "number_of_containers": 2, "tags": ["backend", "prod", "us-west1"], "values": [1, 1, 3]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T20:50:44.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.41", "network": {"tx": 2006223, "rx": 802337}, "created_at": "2021-04-28T19:36:00.000Z", "running": true, "number_of_containers": 2, "tags": ["backend", "prod", "us-west2"], "values": [4, 1, 2]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T20:51:04.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.22", "network": {"tx": 2012916, "rx": 803685}, "created_at": "2021-04-28T19:37:00.000Z", "running": true, "number_of_containers": 2, "tags": ["backend", "prod"], "values": [2, 3, 1]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:03.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.33", "network": {"tx": 1434521, "rx": 530575}, "created_at": "2021-04-28T19:42:00.000Z", "running": false, "number_of_containers": 1, "tags": ["backend", "test"], "values": [2, 3, 4]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:23.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.56", "network": {"tx": 1434577, "rx": 530600}, "created_at": "2021-04-28T19:43:00.000Z", "running": false, "number_of_containers": 1, "tags": ["backend", "test", "us-west2"], "values": [2, 1, 1]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T19:50:53.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.37", "network": {"tx": 1434587, "rx": 530604}, "created_at": "2021-04-28T19:44:00.000Z", "running": true, "number_of_containers": 1, "tags": ["backend", "test", "us-west1"], "values": [4, 5, 2]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T19:51:03.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.120", "network": {"tx": 1434595, "rx": 530605}, "created_at": "2021-04-28T19:45:00.000Z", "running": true, "number_of_containers": 1, "tags": ["backend", "test", "us-west1"], "values": [3, 2, 1]}}}'

  - do:
      indices.put_settings:
        index: test
        body:
          index.blocks.write: true

  - do:
      indices.create:
        index: test-2
        body:
          settings:
            number_of_shards: 1
            index:
              mode: time_series
              routing_path: [ metricset, k8s.pod.uid ]
              time_series:
                start_time: 2021-04-29T00:00:00Z
                end_time: 2021-04-30T00:00:00Z
          mappings:
            properties:
              "@timestamp":
                type: date
              metricset:
                type: keyword
                time_series_dimension: true
              k8s:
                properties:
                  pod:
                    properties:
                      uid:
                        type: keyword
                        time_series_dimension: true
                      name:
                        type: keyword
                      created_at:
                        type: date_nanos
                      running:
                        type: boolean
                      number_of_containers:
                        type: integer
                      ip:
                        type: ip
                      tags:
                        type: keyword
                      values:
                        type: integer
                      network:
                        properties:
                          tx:
                            type: long
                            time_series_metric: gauge
                          rx:
                            type: long
                            time_series_metric: gauge

  - do:
      bulk:
        refresh: true
        index: test-2
        body:
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-29T21:50:04.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.10", "network": {"tx": 2005820, "rx": 802339}, "created_at": "2021-04-29T21:34:00.000Z", "running": false, "number_of_containers": 2, "tags": ["backend", "prod"], "values": [2, 3, 6]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-29T21:50:24.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.28", "network": {"tx": 2000481, "rx": 800479}, "created_at": "2021-04-29T21:35:00.000Z", "running": true, "number_of_containers": 2, "tags": ["backend", "prod", "us-west1"], "values": [1, 1, 3]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-29T21:50:14.467Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.192", "network": {"tx": 1458377, "rx": 530184}, "created_at": "2021-04-29T21:36:00.000Z", "running": false, "number_of_containers": 2, "tags": ["backend", "test"], "values": [3, 3, 1]}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-29T21:50:44.467Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.206", "network": {"tx": 1434104, "rx": 535020}, "created_at": "2021-04-29T21:35:00.000Z", "running": true, "number_of_containers": 2, "tags": ["backend", "prod", "us-west2"], "values": [4, 1, 3]}}}'
          - '{"index": {}}'


---
"Working":
  - requires:
      test_runner_features: [capabilities]
      capabilities:
        - method: POST
          path: /_query
          parameters: []
          capabilities: [aggregate_metric_double_implicit_casting_in_aggs]
      reason: "Support for casting aggregate metric double implicitly when present in aggregations"

  - do:
      indices.downsample:
        index: test
        target_index: test-downsample
        body: >
          {
            "fixed_interval": "1h"
          }
  - is_true: acknowledged

  - do:
      esql.query:
        body:
          query: "TS test-* |
          STATS avg = sum(avg_over_time(k8s.pod.network.rx)),
                count = sum(count_over_time(k8s.pod.network.rx))
          BY k8s.pod.name, time_bucket = bucket(@timestamp, 1 hour) |
          SORT time_bucket, k8s.pod.name |
          LIMIT 10"

  - length: {values: 6}
  - length: {values.0: 4}
  - match: {columns.0.name: "avg"}
  - match: {columns.0.type: "double"}
  - match: {columns.1.name: "count"}
  - match: {columns.1.type: "long"}
  - match: {columns.2.name: "k8s.pod.name"}
  - match: {columns.2.type: "keyword"}
  - match: {columns.3.name: "time_bucket"}
  - match: {columns.3.type: "date"}
  - match: {values.0.0: 801806.0}
  - match: {values.0.1: 2}
  - match: {values.0.2: "cat"}
  - match: {values.0.3: "2021-04-28T18:00:00.000Z"}

---
"Bug":
  - requires:
      test_runner_features: [capabilities]
      capabilities:
        - method: POST
          path: /_query
          parameters: []
          capabilities: [aggregate_metric_double_implicit_casting_in_aggs]
      reason: "Support for casting aggregate metric double implicitly when present in aggregations"

  - do:
      indices.downsample:
        index: test
        target_index: test-downsample
        body: >
          {
            "fixed_interval": "1h"
          }
  - is_true: acknowledged

  - do:
      esql.query:
        body:
          query: "TS test-* |
          STATS avg = sum(avg_over_time(to_aggregate_metric_double(k8s.pod.network.rx))),
                count = sum(count_over_time(to_aggregate_metric_double(k8s.pod.network.rx)))
          BY k8s.pod.name, time_bucket = bucket(@timestamp, 1 hour) |
          SORT time_bucket | LIMIT 10"
  - length: {values: 6}

---
"Bug2":
  - requires:
      test_runner_features: [ capabilities ]
      capabilities:
        - method: POST
          path: /_query
          parameters: [ ]
          capabilities: [ aggregate_metric_double_implicit_casting_in_aggs ]
      reason: "Support for casting aggregate metric double implicitly when present in aggregations"

  - do:
      indices.downsample:
        index: test
        target_index: test-downsample
        body: >
          {
            "fixed_interval": "1h"
          }
  - is_true: acknowledged

  - do:
      esql.query:
        body:
          query: "TS test-* |
          EVAL metric = to_aggregate_metric_double(k8s.pod.network.rx) |
          STATS avg = sum(avg_over_time(metric)),
                count = sum(count_over_time(metric))
          BY k8s.pod.name, time_bucket = bucket(@timestamp, 1 hour) |
          SORT time_bucket | LIMIT 10"
  - length: {values: 6}
